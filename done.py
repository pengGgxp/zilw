# -*- coding: utf-8 -*-
'''此文件为gui界面配置文件，使用pyqt工具进行生成，大部分为自动生成的文件，
有部分槽函数为我编写，
主要功能为我实现的。包括界面设计'''
import traceback

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSignal, pyqtBoundSignal
from PyQt5.QtGui import QIcon, QTextCursor
from PyQt5.QtWidgets import QFileDialog, QMainWindow, QApplication, QMessageBox
import sys
import subprocess
from PyQt5.QtWidgets import QFileDialog

import main





class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("学风处理")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.select = QtWidgets.QLabel(self.centralwidget)
        self.select.setGeometry(QtCore.QRect(160, 100, 121, 21))
        self.select.setObjectName("select")
        self.calendarWidget = QtWidgets.QCalendarWidget(self.centralwidget)
        self.calendarWidget.setGeometry(QtCore.QRect(480, 10, 296, 218))
        self.calendarWidget.setObjectName("calendarWidget")
        self.liulanButton = QtWidgets.QToolButton(self.centralwidget)
        self.liulanButton.setGeometry(QtCore.QRect(320, 130, 47, 21))
        self.liulanButton.setObjectName("liulanButton")
        self.chuliButton = QtWidgets.QPushButton(self.centralwidget)
        self.chuliButton.setGeometry(QtCore.QRect(160, 210, 181, 91))
        self.chuliButton.setObjectName("chuliButton")
        self.closeButton = QtWidgets.QPushButton(self.centralwidget)
        self.closeButton.setGeometry(QtCore.QRect(90, 350, 331, 141))
        self.closeButton.setObjectName("closeButton")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(490, 310, 256, 192))
        self.textBrowser.setObjectName("textBrowser")
        self.logtext = QtWidgets.QLabel(self.centralwidget)
        self.logtext.setGeometry(QtCore.QRect(490, 280, 72, 15))
        self.logtext.setObjectName("logtext")
        self.doclujing = QtWidgets.QLineEdit(self.centralwidget)
        self.doclujing.setGeometry(QtCore.QRect(160, 130, 151, 21))
        self.doclujing.setObjectName("doclujing")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(160, 180, 161, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(160, 160, 151, 16))
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        self.closeButton.clicked.connect(MainWindow.close) # type: ignore
        self.liulanButton.clicked.connect(self.openfile)
        self.chuliButton.clicked.connect(self.procesing)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)




    def openfile(self):
        openfile_name = QFileDialog.getOpenFileName(self,"选择要处理的txt文件",'','txt(*.txt)')
        openfile_name = str(openfile_name[0])
        self.doclujing.setText(openfile_name)
        self.textBrowser.append("文件已打开")







    def procesing(self):
        try:
            openfile_name = self.doclujing.text()
            ss = ''
            for i in openfile_name:
                if i =='/':
                    i = '//'
                ss += i
            self.textBrowser.append("正在处理文件")
            jincheng = QMainWindow.fun_data_proceing(ss)
            self.textBrowser.append("正在进行匹配格式")
            jincheng = QMainWindow.fun_read_data_from_file(jincheng)
            self.textBrowser.append("正在读取并处理excel文件")
            jincheng = QMainWindow.fun_write_data_to_excel(jincheng, self.lineEdit.text()+".xlsx")
            self.textBrowser.append(jincheng)
        except Exception as e:
            error_message = traceback.format_exc()
            self.textBrowser.append("程序发生错误:")
            self.textBrowser.append(error_message)
            msg_box = QMessageBox(QMessageBox.Information, 'ERROR', error_message)
            msg_box.exec_()




    QMainWindow.fun_data_proceing = main.data_proceing
    QMainWindow.fun_read_data_from_file = main.read_data_from_file
    QMainWindow.fun_write_data_to_excel = main.write_data_to_excel

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.select.setText(_translate("MainWindow", "选择要处理的文件"))
        self.liulanButton.setText(_translate("MainWindow", "..."))
        self.chuliButton.setText(_translate("MainWindow", "处理"))
        self.closeButton.setText(_translate("MainWindow", "关闭"))
        self.logtext.setText(_translate("MainWindow", "日志"))
        self.label.setText(_translate("MainWindow", "设置处理后的文件名"))
        self.menu.setTitle(_translate("MainWindow", "自律中心"))
        self.setWindowIcon(QIcon('app.ico'))
        self.lineEdit.setText('done')




if __name__ =="__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())